import pandas as pd
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import MinMaxScaler
from imblearn.over_sampling import SMOTE
from sklearn.impute import SimpleImputer

# Load breast_cancer dataset
breast_cancer = load_breast_cancer()
breast_cancer_df = pd.DataFrame(breast_cancer.data, columns=breast_cancer.feature_names)
breast_cancer_df['target'] = breast_cancer.target

# Outlier detection using IQR
Q1 = breast_cancer_df.quantile(0.25)
Q3 = breast_cancer_df.quantile(0.75)
IQR = Q3 - Q1

outliers = ((breast_cancer_df < (Q1 - 1.5 * IQR)) | (breast_cancer_df > (Q3 + 1.5 * IQR))).any(axis=1)

# Filter out outliers
breast_cancer_df_clean = breast_cancer_df[~outliers]

# Handling missing values by imputation
imputer = SimpleImputer(strategy='mean')
breast_cancer_df_clean_imputed = pd.DataFrame(imputer.fit_transform(breast_cancer_df_clean), columns=breast_cancer_df_clean.columns)

# Normalize the data using Min-Max scaling
scaler = MinMaxScaler()
breast_cancer_normalized = scaler.fit_transform(breast_cancer_df_clean_imputed.iloc[:, :-1])

breast_cancer_normalized_df = pd.DataFrame(breast_cancer_normalized, columns=breast_cancer.feature_names)
breast_cancer_normalized_df['target'] = breast_cancer_df_clean_imputed['target']

# Apply SMOTE for oversampling
X = breast_cancer_normalized_df.iloc[:, :-1]
y = breast_cancer_normalized_df['target']
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X, y)

breast_cancer_balanced_df = pd.DataFrame(X_resampled, columns=breast_cancer.feature_names)
breast_cancer_balanced_df['target'] = y_resampled

print(breast_cancer_balanced_df.head())
